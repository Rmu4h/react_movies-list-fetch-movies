{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/movies.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","targetMovie","title","a","url","fetch","response","json","FindMovie","addMovie","useState","setMovie","movieTitle","setMovieTitle","movieError","setMovieError","handleSearchQuery","newMovie","Response","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","toLowerCase","onClick","App","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAG,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAOG,OACZC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,gBAA2BD,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAOK,aAItC,sBAAKJ,UAAU,UAAf,iBACGD,QADH,IACGA,OADH,EACGA,EAAOM,KACR,iCC9BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uBCffC,G,MAAU,uDAET,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,iBAAAC,EAAA,6DACCC,EADD,UACUJ,EADV,eACwBE,EADxB,cAEkBG,MAAMD,GAFxB,cAECE,EAFD,yBAIEA,EAASC,QAJX,4C,sBCQA,IAAMC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAuB,MAAjD,mBAAOrB,EAAP,KAAcsB,EAAd,KACA,EAAoCD,mBAAS,IAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAOMC,EAAiB,uCAAG,4BAAAb,EAAA,sEACDF,EAAYW,GADX,OAGE,UAFpBK,EADkB,QAGXC,UACXP,EAASM,GACTF,GAAc,KAEdJ,EAAS,MACTI,GAAc,IARQ,2CAAH,qDAsBvB,OACE,qCACE,uBACEzB,UAAU,aACV6B,SAdqB,SAACC,GAC1BA,EAAMC,iBAEFhC,IACFoB,EAASpB,GACTsB,EAAS,MACTE,EAAc,MAMd,UAIE,sBAAKvB,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQgC,QAAQ,cAAjC,wBAEE,qBAAKhC,UAAU,UAAf,SACE,uBACEiC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZnC,UAAU,kBACVoC,MAAOd,EACPe,SA3CW,SAACP,GACxBP,EAAcO,EAAMQ,OAAOF,MAAMG,eACjCd,GAAc,WA8CPD,GACC,mBAAGxB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEiC,KAAK,SACLjC,UAAU,kBACVwC,QAASd,EAHX,4BASF,qBAAK1B,UAAU,UAAf,SACE,wBACEiC,KAAK,SACLjC,UAAU,oBAFZ,qCAUN,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAAS,cAAC,EAAD,CAAWA,MAAOA,WCzFvB0C,EAAgB,WAC3B,MAA4BrB,mBAAkB,IAA9C,mBAAOb,EAAP,KAAemC,EAAf,KAaA,OACE,sBAAK1C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWmB,SAjBA,SAACQ,GACKpB,EAAOoC,MAAK,SAAA5C,GAAK,OAAIA,EAAMU,SAAWkB,EAASlB,WAGlEiC,EAAU,GAAD,mBACJnC,GADI,CAEPoB,cCVRiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4cc19a92.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n// import { getAllMovies, targetMovie } from '../../api/movies';\n\ntype Props = {\n  movie: Movie | null;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie?.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie?.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie?.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=35b47ad';\n\nexport async function targetMovie(title: string): Promise<Movie> {\n  const url = `${API_URL}&t=[${title}]`;\n  const response = await fetch(url);\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { targetMovie } from '../../api/movies';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movieError, setMovieError] = useState(false);\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMovieTitle(event.target.value.toLowerCase());\n    setMovieError(false);\n  };\n\n  const handleSearchQuery = async () => {\n    const newMovie = await targetMovie(movieTitle);\n\n    if (newMovie.Response === 'True') {\n      setMovie(newMovie);\n      setMovieError(false);\n    } else {\n      setMovie(null);\n      setMovieError(true);\n    }\n  };\n\n  const handleOnSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (movie) {\n      addMovie(movie);\n      setMovie(null);\n      setMovieTitle('');\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleOnSubmitForm}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input is-danger\"\n                value={movieTitle}\n                onChange={handleTitleInput}\n              />\n            </div>\n          </label>\n\n          {movieError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleSearchQuery}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    const alreadyExist = movies.some(movie => movie.imdbID === newMovie.imdbID);\n\n    if (!alreadyExist) {\n      setMovies([\n        ...movies,\n        newMovie,\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}